<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MSSQL on 人生短短几個秋</title>
    <link>https://vincent-233.github.io/tags/mssql/</link>
    <description>Recent content in MSSQL on 人生短短几個秋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Mar 2025 23:20:36 +0800</lastBuildDate><atom:link href="https://vincent-233.github.io/tags/mssql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL Server中几个重要的SET OPTION，非必要不建议修改</title>
      <link>https://vincent-233.github.io/2025/03/23/mssql_two_common_set_option/</link>
      <pubDate>Sun, 23 Mar 2025 23:20:36 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2025/03/23/mssql_two_common_set_option/</guid>
      <description>为何写这个话题？因为项目中出现过几次有开发者copy之前的release脚本，没注意到其中的set option的影响，最终造成release</description>
    </item>
    
    <item>
      <title>IF语句会将@@ROWCOUNT重置为0</title>
      <link>https://vincent-233.github.io/2025/03/09/mssql_rowcount_variable/</link>
      <pubDate>Sun, 09 Mar 2025 17:14:40 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2025/03/09/mssql_rowcount_variable/</guid>
      <description>最近遇到一个关于全局变量 @@ROWCOUNT 的值意外变化的问题，代码逻辑是根据不同条件执行不同的 SELECT 语句，然后记录返回行数，大致代码如下： DECLARE @type VARCHAR(20) = &amp;#39;A&amp;#39; IF @type = &amp;#39;A&amp;#39; BEGIN SELECT</description>
    </item>
    
    <item>
      <title>一些有用的T-SQL功能点</title>
      <link>https://vincent-233.github.io/2024/07/27/tsql_specfic_feature/</link>
      <pubDate>Sat, 27 Jul 2024 10:25:50 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2024/07/27/tsql_specfic_feature/</guid>
      <description>不同的SQL引擎在一定程度上支持SQL标准之外，还有一些自己的特有语法，一般称为SQL方言，本文主要记录我觉得比较有用的“冷门”SQL Ser</description>
    </item>
    
    <item>
      <title>提升SSMS使用效率的一些Tips</title>
      <link>https://vincent-233.github.io/2023/12/19/ssms_tips/</link>
      <pubDate>Tue, 19 Dec 2023 00:11:23 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2023/12/19/ssms_tips/</guid>
      <description>本人工作中最常用的数据库就是Microsoft SQL Server，SSMS这个软件自然也是使用了多年，如果能搭配SQL Prompt这个插件，效率</description>
    </item>
    
    <item>
      <title>关于SQL Server SELECT语句列别名风格</title>
      <link>https://vincent-233.github.io/2023/09/20/about_column_alias_in_mssql/</link>
      <pubDate>Wed, 20 Sep 2023 00:55:30 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2023/09/20/about_column_alias_in_mssql/</guid>
      <description>注：每个人都有自己的偏好，本文仅为个人观点，且仅针对SQL Server。 公司现存的代码规范文档推荐在SELECT语句中用column_ali</description>
    </item>
    
    <item>
      <title>MSSQL 2016 - 2019，新功能</title>
      <link>https://vincent-233.github.io/2023/09/15/mssql_2016_to_2019_new_feature/</link>
      <pubDate>Fri, 15 Sep 2023 22:32:38 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2023/09/15/mssql_2016_to_2019_new_feature/</guid>
      <description>我最近才开始接触SQL Server 2019，从2014版本到2019它新增了很多功能，但我暂时都用不上，这里主要从一个传统的数据库开发者角度去记录一些</description>
    </item>
    
    <item>
      <title>Python运行MSSQL存储过程采坑记</title>
      <link>https://vincent-233.github.io/2023/08/21/notes_about_pyodbc_and_mssql_sp/</link>
      <pubDate>Mon, 21 Aug 2023 00:02:42 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2023/08/21/notes_about_pyodbc_and_mssql_sp/</guid>
      <description>虽然入门Python已经多年，但由于日常工作中，特别是生产环境上没有Python项目，对Python一直不算非常熟练，基本上只是偶尔用它在本</description>
    </item>
    
    <item>
      <title>bcp导入导出报错，字段名含空格</title>
      <link>https://vincent-233.github.io/2023/02/10/bcp_format_file_error_with_space_in_column_name/</link>
      <pubDate>Fri, 10 Feb 2023 00:07:56 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2023/02/10/bcp_format_file_error_with_space_in_column_name/</guid>
      <description>问题描述 用SQL Server的bcp工具通过导入导出在不同server之间同步表数据，有使用format file，若表字段名称中含有空白字符</description>
    </item>
    
    <item>
      <title>T-SQL聚合拼接或求和，不可靠（SELECT @x = @x &#43; ...）</title>
      <link>https://vincent-233.github.io/2022/12/04/agg_select_string_concat_unreliable/</link>
      <pubDate>Sun, 04 Dec 2022 11:00:05 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2022/12/04/agg_select_string_concat_unreliable/</guid>
      <description>背景 写T-SQL的人经常会看到通过如下方式进行字符串拼接或求和： DECLARE @x_str VARCHAR(100) = &amp;#39;&amp;#39;, @x_sum INT = 0; -- 字符串拼接 SELECT @x_str = @x_str + col_str FROM Table_x; PRINT @x_str; -- 数值求和 SELECT @x_sum = @x_sum + col_int FROM Table_x;</description>
    </item>
    
    <item>
      <title>SQL Server无法删除快照</title>
      <link>https://vincent-233.github.io/2022/09/20/mssql_can_not_drop_snapshot/</link>
      <pubDate>Tue, 20 Sep 2022 00:56:10 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2022/09/20/mssql_can_not_drop_snapshot/</guid>
      <description>最近在服务器上发现了一个很早前建的snapshot，处于suspect状态，删除时会报错： Warning: Fatal error 615 occurred at xxxx. Note the error and time, and contact your system administrator. 网上搜索了发现资</description>
    </item>
    
    <item>
      <title>SQL Server空表依然占用空间</title>
      <link>https://vincent-233.github.io/2022/09/04/mssql_delete_no_space_release/</link>
      <pubDate>Sun, 04 Sep 2022 17:08:34 +0800</pubDate>
      
      <guid>https://vincent-233.github.io/2022/09/04/mssql_delete_no_space_release/</guid>
      <description>最近查看表空间占用情况时，发现有个表行数为0，但占用空间依然非常高，对database进行Shrink也不会释放，百思不得其解，后面查资料发</description>
    </item>
    
    <item>
      <title>关于SQL Server LocalDB的使用</title>
      <link>https://vincent-233.github.io/2022/04/23/about-mssql-local-db/</link>
      <pubDate>Sat, 23 Apr 2022 20:17:46 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2022/04/23/about-mssql-local-db/</guid>
      <description>日常工作电脑不方便自行安装SQL Server实例，服务器又是多人共享开发，权限也管理得很严格，不方便个人测试和临时数据存储，好在安装的SSD</description>
    </item>
    
    <item>
      <title>sqlcmd使用体验</title>
      <link>https://vincent-233.github.io/2020/06/14/106740950/</link>
      <pubDate>Sun, 14 Jun 2020 17:02:48 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2020/06/14/106740950/</guid>
      <description>为何要用SQLCMD 平时习惯了在SSMS中做开发，有什么变动也直接在SSMS的查询界面中执行，更新的对象和步骤少还好，如果一下子需要执行非常</description>
    </item>
    
    <item>
      <title>SQL Server Audit 功能体验</title>
      <link>https://vincent-233.github.io/2018/09/24/82832350/</link>
      <pubDate>Mon, 24 Sep 2018 21:52:38 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/09/24/82832350/</guid>
      <description>SQL Server 的Audit功能可以用来对数据库进行某种审计。下面用一个简单的例子来说明一下它的用法和效果。更多详细用法可翻阅联机丛书。 业务场景 对用户d</description>
    </item>
    
    <item>
      <title>SQL Server 邮件功能使用</title>
      <link>https://vincent-233.github.io/2018/08/07/81481585/</link>
      <pubDate>Tue, 07 Aug 2018 15:07:49 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/08/07/81481585/</guid>
      <description>SQL Server有自带的邮件服务，可以用它来做一些自动通知提醒的邮件，如警报和通知。下面总结一下它的配置与使用。 配置Database Mail 配置入口</description>
    </item>
    
    <item>
      <title>SQL复制（订阅、发布）实践问题记录</title>
      <link>https://vincent-233.github.io/2018/06/18/80724609/</link>
      <pubDate>Mon, 18 Jun 2018 16:32:46 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/06/18/80724609/</guid>
      <description>关于SQL复制的具体操作步骤网上有很多教程我就不说明了，这里主要记录下我的实践，以及过程中遇到的问题与解决方法： 本机不同数据库间复制 本机配置</description>
    </item>
    
    <item>
      <title>SQL Server数据库复制向导报错解决</title>
      <link>https://vincent-233.github.io/2018/06/05/80583991/</link>
      <pubDate>Tue, 05 Jun 2018 17:02:16 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/06/05/80583991/</guid>
      <description>今天利用数据库复制向导（Copy Database Wizard）将2012版本的数据库复制到2014时，遇到了一些错误，并最终解决，特此记录： 数据库兼容级别</description>
    </item>
    
    <item>
      <title>SQL Server FileStream 体验</title>
      <link>https://vincent-233.github.io/2018/06/03/80553895/</link>
      <pubDate>Sun, 03 Jun 2018 07:50:47 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/06/03/80553895/</guid>
      <description>FileStream是SQL Server 2008提供的新特性，之前附件在SQL的存储一种是直接放数据库，一种是存储一个路径，附件单独放在磁盘上。前一种</description>
    </item>
    
    <item>
      <title>SQL Server透明数据加密（TDE）实践</title>
      <link>https://vincent-233.github.io/2018/05/22/80404769/</link>
      <pubDate>Tue, 22 May 2018 14:19:56 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/05/22/80404769/</guid>
      <description>透明数据加密（Transparent Data Encryption）主要用于防止数据库文件被未经授权地拷贝或服务器被盗后通过附加/还原等操作访问数据</description>
    </item>
    
    <item>
      <title>SQL Server分区表实践</title>
      <link>https://vincent-233.github.io/2018/05/21/80387148/</link>
      <pubDate>Mon, 21 May 2018 00:38:33 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/05/21/80387148/</guid>
      <description>建立分区表的步骤： 新建文件组（FileGroups） 新建用于承载具体分区的文件组，数据库默认有只有一个Primary文件组。 也可以在单个文件</description>
    </item>
    
    <item>
      <title>关于数据库隔离级别-快照(SnapShot)</title>
      <link>https://vincent-233.github.io/2018/05/01/80154338/</link>
      <pubDate>Tue, 01 May 2018 10:10:04 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2018/05/01/80154338/</guid>
      <description>在事务中将隔离级别设为SnapShot，可提升读写并发性能，防止脏读，这里简单介绍下设置使用方法 在单独事务中启用SNAPSHOT 不开启默认选</description>
    </item>
    
    <item>
      <title>SQL CLR函数（以正则表达式为例）</title>
      <link>https://vincent-233.github.io/2017/03/04/60332993/</link>
      <pubDate>Sat, 04 Mar 2017 17:13:51 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2017/03/04/60332993/</guid>
      <description>创建CLR程序集 VS中新建项目，类型为Database，模板选择SQL Server项目，然后在解决方案资源管理器中，选中项目，右键添加，选择</description>
    </item>
    
    <item>
      <title>DBA眼中的CLR (译)</title>
      <link>https://vincent-233.github.io/2017/03/04/60330115/</link>
      <pubDate>Sat, 04 Mar 2017 16:13:25 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2017/03/04/60330115/</guid>
      <description>SQL Server 2005引入CLR之后，开发者们热情地接受了它。 CLR作为一个强有力的工具，开发者可在数据库中利用它调用其他面向对象语言编写而成的功能。</description>
    </item>
    
    <item>
      <title>从登陆名与用户名的区别说起，谈SQL Server安全性初步</title>
      <link>https://vincent-233.github.io/2015/05/31/46288335/</link>
      <pubDate>Sun, 31 May 2015 14:17:04 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2015/05/31/46288335/</guid>
      <description>概述 登陆名的作用域是SQL Server数据库引擎，要连接到具体的数据库并进行相应操作，登陆名还需要映射到数据库用户名，并为用户名指定数据库角</description>
    </item>
    
    <item>
      <title>SQL Server无法删除数据库的解决方法</title>
      <link>https://vincent-233.github.io/2014/07/11/37717375/</link>
      <pubDate>Fri, 11 Jul 2014 18:41:45 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2014/07/11/37717375/</guid>
      <description>思路：先删除与此数据库连接的进程，再删除数据库 直接上脚本： -- 删除与此数据库相关的连接 DECLARE @sql VARCHAR(4000) SELECT @sql = ISNULL(@sql,&amp;#39;&amp;#39;) + &amp;#39;kill &amp;#39; + LTRIM(spid) + CHAR(13) from sysprocesses WHERE dbid = DB_ID(&amp;#39;DB_Name&amp;#39;) EXEC(@sql) -- 删除与此数据</description>
    </item>
    
    <item>
      <title>Microsoft.ACE.OLEDB.12.0 及其在 MSSQL中的使用</title>
      <link>https://vincent-233.github.io/2014/02/08/19000277/</link>
      <pubDate>Sat, 08 Feb 2014 18:47:50 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2014/02/08/19000277/</guid>
      <description>1.Microsoft.ACE.OLEDB.12.0 简介 实施上就是一个数据访问接口，用于在office文件和非office应用程序间传输数据。例如Microsoft Office Access 2010（.mdb和.</description>
    </item>
    
    <item>
      <title>SQL Server 2005 无日志文件附加数据库</title>
      <link>https://vincent-233.github.io/2013/12/27/17620647/</link>
      <pubDate>Fri, 27 Dec 2013 14:43:35 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2013/12/27/17620647/</guid>
      <description>虽然目前本人用的是2008R2，但很多客户仍然还是2005版本的，所以还是将这篇文章转过来，以备不时之需。在2008下附加2005的mdf应</description>
    </item>
    
    <item>
      <title>关于SQL Server 排序规则</title>
      <link>https://vincent-233.github.io/2013/11/17/16645847/</link>
      <pubDate>Sun, 17 Nov 2013 14:18:46 +0000</pubDate>
      
      <guid>https://vincent-233.github.io/2013/11/17/16645847/</guid>
      <description>今天写一SQL语句时，被提示&amp;quot; 无法解决 equal to操作中 &amp;ldquo;SQL_Latin1_General_CP1_CI_AS&amp;quot</description>
    </item>
    
  </channel>
</rss>
